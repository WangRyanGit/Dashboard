// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.apple.ios.protos.nano;

@SuppressWarnings("hiding")
public interface VpnProto {

  public static final class VpnServers extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnServers[] _emptyArray;
    public static VpnServers[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnServers[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string country = 1;
    public String country;

    // optional string server_load = 2;
    public String serverLoad;

    // optional string ip = 3;
    public String ip;

    // optional string flagurl = 4;
    public String flagurl;

    // optional string free = 5;
    public String free;

    public VpnServers() {
      clear();
    }

    public VpnServers clear() {
      country = "";
      serverLoad = "";
      ip = "";
      flagurl = "";
      free = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.country.equals("")) {
        output.writeString(1, this.country);
      }
      if (!this.serverLoad.equals("")) {
        output.writeString(2, this.serverLoad);
      }
      if (!this.ip.equals("")) {
        output.writeString(3, this.ip);
      }
      if (!this.flagurl.equals("")) {
        output.writeString(4, this.flagurl);
      }
      if (!this.free.equals("")) {
        output.writeString(5, this.free);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.country.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.country);
      }
      if (!this.serverLoad.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.serverLoad);
      }
      if (!this.ip.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.ip);
      }
      if (!this.flagurl.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.flagurl);
      }
      if (!this.free.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.free);
      }
      return size;
    }

    @Override
    public VpnServers mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.country = input.readString();
            break;
          }
          case 18: {
            this.serverLoad = input.readString();
            break;
          }
          case 26: {
            this.ip = input.readString();
            break;
          }
          case 34: {
            this.flagurl = input.readString();
            break;
          }
          case 42: {
            this.free = input.readString();
            break;
          }
        }
      }
    }

    public static VpnServers parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnServers(), data);
    }

    public static VpnServers parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnServers().mergeFrom(input);
    }
  }

  public static final class VpnConfig extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnConfig[] _emptyArray;
    public static VpnConfig[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnConfig[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string psk = 1;
    public String psk;

    // optional string eap_user = 2;
    public String eapUser;

    // optional string remote_id = 3;
    public String remoteId;

    // optional string eap_passwd = 4;
    public String eapPasswd;

    // optional string local_id = 5;
    public String localId;

    // optional string type = 6;
    public String type;

    // optional int32 id = 7;
    public int id;

    public VpnConfig() {
      clear();
    }

    public VpnConfig clear() {
      psk = "";
      eapUser = "";
      remoteId = "";
      eapPasswd = "";
      localId = "";
      type = "";
      id = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.psk.equals("")) {
        output.writeString(1, this.psk);
      }
      if (!this.eapUser.equals("")) {
        output.writeString(2, this.eapUser);
      }
      if (!this.remoteId.equals("")) {
        output.writeString(3, this.remoteId);
      }
      if (!this.eapPasswd.equals("")) {
        output.writeString(4, this.eapPasswd);
      }
      if (!this.localId.equals("")) {
        output.writeString(5, this.localId);
      }
      if (!this.type.equals("")) {
        output.writeString(6, this.type);
      }
      if (this.id != 0) {
        output.writeInt32(7, this.id);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.psk.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.psk);
      }
      if (!this.eapUser.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.eapUser);
      }
      if (!this.remoteId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.remoteId);
      }
      if (!this.eapPasswd.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.eapPasswd);
      }
      if (!this.localId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.localId);
      }
      if (!this.type.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.type);
      }
      if (this.id != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(7, this.id);
      }
      return size;
    }

    @Override
    public VpnConfig mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.psk = input.readString();
            break;
          }
          case 18: {
            this.eapUser = input.readString();
            break;
          }
          case 26: {
            this.remoteId = input.readString();
            break;
          }
          case 34: {
            this.eapPasswd = input.readString();
            break;
          }
          case 42: {
            this.localId = input.readString();
            break;
          }
          case 50: {
            this.type = input.readString();
            break;
          }
          case 56: {
            this.id = input.readInt32();
            break;
          }
        }
      }
    }

    public static VpnConfig parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnConfig(), data);
    }

    public static VpnConfig parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnConfig().mergeFrom(input);
    }
  }

  public static final class VpnServersRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnServersRequest[] _emptyArray;
    public static VpnServersRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnServersRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string geo = 1;
    public String geo;

    // optional string idfa = 2;
    public String idfa;

    // optional string bundleId = 3;
    public String bundleId;

    public VpnServersRequest() {
      clear();
    }

    public VpnServersRequest clear() {
      geo = "";
      idfa = "";
      bundleId = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.geo.equals("")) {
        output.writeString(1, this.geo);
      }
      if (!this.idfa.equals("")) {
        output.writeString(2, this.idfa);
      }
      if (!this.bundleId.equals("")) {
        output.writeString(3, this.bundleId);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.geo);
      }
      if (!this.idfa.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.idfa);
      }
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.bundleId);
      }
      return size;
    }

    @Override
    public VpnServersRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.geo = input.readString();
            break;
          }
          case 18: {
            this.idfa = input.readString();
            break;
          }
          case 26: {
            this.bundleId = input.readString();
            break;
          }
        }
      }
    }

    public static VpnServersRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnServersRequest(), data);
    }

    public static VpnServersRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnServersRequest().mergeFrom(input);
    }
  }

  public static final class VpnServersResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnServersResponse[] _emptyArray;
    public static VpnServersResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnServersResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .VpnServers VpnServersList = 1;
    public VpnServers[] vpnServersList;

    // repeated .VpnConfig VpnConfigList = 2;
    public VpnConfig[] vpnConfigList;

    // optional string status = 3;
    public String status;

    // optional int64 serverTime = 4;
    public long serverTime;

    public VpnServersResponse() {
      clear();
    }

    public VpnServersResponse clear() {
      vpnServersList = VpnServers.emptyArray();
      vpnConfigList = VpnConfig.emptyArray();
      status = "";
      serverTime = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.vpnServersList != null && this.vpnServersList.length > 0) {
        for (int i = 0; i < this.vpnServersList.length; i++) {
          VpnServers element = this.vpnServersList[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (this.vpnConfigList != null && this.vpnConfigList.length > 0) {
        for (int i = 0; i < this.vpnConfigList.length; i++) {
          VpnConfig element = this.vpnConfigList[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      if (!this.status.equals("")) {
        output.writeString(3, this.status);
      }
      if (this.serverTime != 0L) {
        output.writeInt64(4, this.serverTime);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.vpnServersList != null && this.vpnServersList.length > 0) {
        for (int i = 0; i < this.vpnServersList.length; i++) {
          VpnServers element = this.vpnServersList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (this.vpnConfigList != null && this.vpnConfigList.length > 0) {
        for (int i = 0; i < this.vpnConfigList.length; i++) {
          VpnConfig element = this.vpnConfigList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      if (!this.status.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.status);
      }
      if (this.serverTime != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(4, this.serverTime);
      }
      return size;
    }

    @Override
    public VpnServersResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.vpnServersList == null ? 0 : this.vpnServersList.length;
            VpnServers[] newArray =
                new VpnServers[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.vpnServersList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new VpnServers();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new VpnServers();
            input.readMessage(newArray[i]);
            this.vpnServersList = newArray;
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.vpnConfigList == null ? 0 : this.vpnConfigList.length;
            VpnConfig[] newArray =
                new VpnConfig[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.vpnConfigList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new VpnConfig();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new VpnConfig();
            input.readMessage(newArray[i]);
            this.vpnConfigList = newArray;
            break;
          }
          case 26: {
            this.status = input.readString();
            break;
          }
          case 32: {
            this.serverTime = input.readInt64();
            break;
          }
        }
      }
    }

    public static VpnServersResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnServersResponse(), data);
    }

    public static VpnServersResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnServersResponse().mergeFrom(input);
    }
  }

  public static final class VpnUsers extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnUsers[] _emptyArray;
    public static VpnUsers[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnUsers[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int64 id = 1;
    public long id;

    // optional string username = 2;
    public String username;

    // optional string password = 3;
    public String password;

    // optional string bundleId = 4;
    public String bundleId;

    // optional string regtime = 5;
    public String regtime;

    public VpnUsers() {
      clear();
    }

    public VpnUsers clear() {
      id = 0L;
      username = "";
      password = "";
      bundleId = "";
      regtime = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0L) {
        output.writeInt64(1, this.id);
      }
      if (!this.username.equals("")) {
        output.writeString(2, this.username);
      }
      if (!this.password.equals("")) {
        output.writeString(3, this.password);
      }
      if (!this.bundleId.equals("")) {
        output.writeString(4, this.bundleId);
      }
      if (!this.regtime.equals("")) {
        output.writeString(5, this.regtime);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.id);
      }
      if (!this.username.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.username);
      }
      if (!this.password.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.password);
      }
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.bundleId);
      }
      if (!this.regtime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.regtime);
      }
      return size;
    }

    @Override
    public VpnUsers mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt64();
            break;
          }
          case 18: {
            this.username = input.readString();
            break;
          }
          case 26: {
            this.password = input.readString();
            break;
          }
          case 34: {
            this.bundleId = input.readString();
            break;
          }
          case 42: {
            this.regtime = input.readString();
            break;
          }
        }
      }
    }

    public static VpnUsers parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnUsers(), data);
    }

    public static VpnUsers parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnUsers().mergeFrom(input);
    }
  }

  public static final class VpnRegisterRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnRegisterRequest[] _emptyArray;
    public static VpnRegisterRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnRegisterRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string bundleId = 1;
    public String bundleId;

    // optional string username = 2;
    public String username;

    // optional string password = 3;
    public String password;

    // optional string idfa = 4;
    public String idfa;

    // optional string geo = 5;
    public String geo;

    // optional string begintime = 6;
    public String begintime;

    public VpnRegisterRequest() {
      clear();
    }

    public VpnRegisterRequest clear() {
      bundleId = "";
      username = "";
      password = "";
      idfa = "";
      geo = "";
      begintime = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.bundleId.equals("")) {
        output.writeString(1, this.bundleId);
      }
      if (!this.username.equals("")) {
        output.writeString(2, this.username);
      }
      if (!this.password.equals("")) {
        output.writeString(3, this.password);
      }
      if (!this.idfa.equals("")) {
        output.writeString(4, this.idfa);
      }
      if (!this.geo.equals("")) {
        output.writeString(5, this.geo);
      }
      if (!this.begintime.equals("")) {
        output.writeString(6, this.begintime);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.bundleId);
      }
      if (!this.username.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.username);
      }
      if (!this.password.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.password);
      }
      if (!this.idfa.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.idfa);
      }
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.geo);
      }
      if (!this.begintime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.begintime);
      }
      return size;
    }

    @Override
    public VpnRegisterRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.bundleId = input.readString();
            break;
          }
          case 18: {
            this.username = input.readString();
            break;
          }
          case 26: {
            this.password = input.readString();
            break;
          }
          case 34: {
            this.idfa = input.readString();
            break;
          }
          case 42: {
            this.geo = input.readString();
            break;
          }
          case 50: {
            this.begintime = input.readString();
            break;
          }
        }
      }
    }

    public static VpnRegisterRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnRegisterRequest(), data);
    }

    public static VpnRegisterRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnRegisterRequest().mergeFrom(input);
    }
  }

  public static final class VpnRegisterResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnRegisterResponse[] _emptyArray;
    public static VpnRegisterResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnRegisterResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string status = 1;
    public String status;

    // optional int64 time = 2;
    public long time;

    public VpnRegisterResponse() {
      clear();
    }

    public VpnRegisterResponse clear() {
      status = "";
      time = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.status.equals("")) {
        output.writeString(1, this.status);
      }
      if (this.time != 0L) {
        output.writeInt64(2, this.time);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.status.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.status);
      }
      if (this.time != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.time);
      }
      return size;
    }

    @Override
    public VpnRegisterResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.status = input.readString();
            break;
          }
          case 16: {
            this.time = input.readInt64();
            break;
          }
        }
      }
    }

    public static VpnRegisterResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnRegisterResponse(), data);
    }

    public static VpnRegisterResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnRegisterResponse().mergeFrom(input);
    }
  }

  public static final class VpnLoginRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnLoginRequest[] _emptyArray;
    public static VpnLoginRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnLoginRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string bundleId = 1;
    public String bundleId;

    // optional string username = 2;
    public String username;

    // optional string password = 3;
    public String password;

    // optional string idfa = 4;
    public String idfa;

    // optional string geo = 5;
    public String geo;

    // optional string localtime = 6;
    public String localtime;

    public VpnLoginRequest() {
      clear();
    }

    public VpnLoginRequest clear() {
      bundleId = "";
      username = "";
      password = "";
      idfa = "";
      geo = "";
      localtime = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.bundleId.equals("")) {
        output.writeString(1, this.bundleId);
      }
      if (!this.username.equals("")) {
        output.writeString(2, this.username);
      }
      if (!this.password.equals("")) {
        output.writeString(3, this.password);
      }
      if (!this.idfa.equals("")) {
        output.writeString(4, this.idfa);
      }
      if (!this.geo.equals("")) {
        output.writeString(5, this.geo);
      }
      if (!this.localtime.equals("")) {
        output.writeString(6, this.localtime);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.bundleId);
      }
      if (!this.username.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.username);
      }
      if (!this.password.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.password);
      }
      if (!this.idfa.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.idfa);
      }
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.geo);
      }
      if (!this.localtime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.localtime);
      }
      return size;
    }

    @Override
    public VpnLoginRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.bundleId = input.readString();
            break;
          }
          case 18: {
            this.username = input.readString();
            break;
          }
          case 26: {
            this.password = input.readString();
            break;
          }
          case 34: {
            this.idfa = input.readString();
            break;
          }
          case 42: {
            this.geo = input.readString();
            break;
          }
          case 50: {
            this.localtime = input.readString();
            break;
          }
        }
      }
    }

    public static VpnLoginRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnLoginRequest(), data);
    }

    public static VpnLoginRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnLoginRequest().mergeFrom(input);
    }
  }

  public static final class VpnLoginResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnLoginResponse[] _emptyArray;
    public static VpnLoginResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnLoginResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .VpnUsers VpnUsersList = 1;
    public VpnUsers[] vpnUsersList;

    // repeated .VpnSign VpnSignList = 2;
    public VpnSign[] vpnSignList;

    // repeated .VpnVerify VpnVerifyList = 3;
    public VpnVerify[] vpnVerifyList;

    // optional string status = 4;
    public String status;

    // optional int64 time = 5;
    public long time;

    public VpnLoginResponse() {
      clear();
    }

    public VpnLoginResponse clear() {
      vpnUsersList = VpnUsers.emptyArray();
      vpnSignList = VpnSign.emptyArray();
      vpnVerifyList = VpnVerify.emptyArray();
      status = "";
      time = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.vpnUsersList != null && this.vpnUsersList.length > 0) {
        for (int i = 0; i < this.vpnUsersList.length; i++) {
          VpnUsers element = this.vpnUsersList[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (this.vpnSignList != null && this.vpnSignList.length > 0) {
        for (int i = 0; i < this.vpnSignList.length; i++) {
          VpnSign element = this.vpnSignList[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      if (this.vpnVerifyList != null && this.vpnVerifyList.length > 0) {
        for (int i = 0; i < this.vpnVerifyList.length; i++) {
          VpnVerify element = this.vpnVerifyList[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      if (!this.status.equals("")) {
        output.writeString(4, this.status);
      }
      if (this.time != 0L) {
        output.writeInt64(5, this.time);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.vpnUsersList != null && this.vpnUsersList.length > 0) {
        for (int i = 0; i < this.vpnUsersList.length; i++) {
          VpnUsers element = this.vpnUsersList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (this.vpnSignList != null && this.vpnSignList.length > 0) {
        for (int i = 0; i < this.vpnSignList.length; i++) {
          VpnSign element = this.vpnSignList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      if (this.vpnVerifyList != null && this.vpnVerifyList.length > 0) {
        for (int i = 0; i < this.vpnVerifyList.length; i++) {
          VpnVerify element = this.vpnVerifyList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      if (!this.status.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.status);
      }
      if (this.time != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(5, this.time);
      }
      return size;
    }

    @Override
    public VpnLoginResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.vpnUsersList == null ? 0 : this.vpnUsersList.length;
            VpnUsers[] newArray =
                new VpnUsers[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.vpnUsersList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new VpnUsers();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new VpnUsers();
            input.readMessage(newArray[i]);
            this.vpnUsersList = newArray;
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.vpnSignList == null ? 0 : this.vpnSignList.length;
            VpnSign[] newArray =
                new VpnSign[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.vpnSignList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new VpnSign();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new VpnSign();
            input.readMessage(newArray[i]);
            this.vpnSignList = newArray;
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.vpnVerifyList == null ? 0 : this.vpnVerifyList.length;
            VpnVerify[] newArray =
                new VpnVerify[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.vpnVerifyList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new VpnVerify();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new VpnVerify();
            input.readMessage(newArray[i]);
            this.vpnVerifyList = newArray;
            break;
          }
          case 34: {
            this.status = input.readString();
            break;
          }
          case 40: {
            this.time = input.readInt64();
            break;
          }
        }
      }
    }

    public static VpnLoginResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnLoginResponse(), data);
    }

    public static VpnLoginResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnLoginResponse().mergeFrom(input);
    }
  }

  public static final class VpnCodeRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnCodeRequest[] _emptyArray;
    public static VpnCodeRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnCodeRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string bundleId = 1;
    public String bundleId;

    // optional string username = 2;
    public String username;

    // optional string idfa = 4;
    public String idfa;

    // optional string geo = 5;
    public String geo;

    public VpnCodeRequest() {
      clear();
    }

    public VpnCodeRequest clear() {
      bundleId = "";
      username = "";
      idfa = "";
      geo = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.bundleId.equals("")) {
        output.writeString(1, this.bundleId);
      }
      if (!this.username.equals("")) {
        output.writeString(2, this.username);
      }
      if (!this.idfa.equals("")) {
        output.writeString(4, this.idfa);
      }
      if (!this.geo.equals("")) {
        output.writeString(5, this.geo);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.bundleId);
      }
      if (!this.username.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.username);
      }
      if (!this.idfa.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.idfa);
      }
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.geo);
      }
      return size;
    }

    @Override
    public VpnCodeRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.bundleId = input.readString();
            break;
          }
          case 18: {
            this.username = input.readString();
            break;
          }
          case 34: {
            this.idfa = input.readString();
            break;
          }
          case 42: {
            this.geo = input.readString();
            break;
          }
        }
      }
    }

    public static VpnCodeRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnCodeRequest(), data);
    }

    public static VpnCodeRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnCodeRequest().mergeFrom(input);
    }
  }

  public static final class VpnCodeResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnCodeResponse[] _emptyArray;
    public static VpnCodeResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnCodeResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string verifyCode = 1;
    public String verifyCode;

    // optional string status = 2;
    public String status;

    // optional int64 time = 3;
    public long time;

    public VpnCodeResponse() {
      clear();
    }

    public VpnCodeResponse clear() {
      verifyCode = "";
      status = "";
      time = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.verifyCode.equals("")) {
        output.writeString(1, this.verifyCode);
      }
      if (!this.status.equals("")) {
        output.writeString(2, this.status);
      }
      if (this.time != 0L) {
        output.writeInt64(3, this.time);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.verifyCode.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.verifyCode);
      }
      if (!this.status.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.status);
      }
      if (this.time != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(3, this.time);
      }
      return size;
    }

    @Override
    public VpnCodeResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.verifyCode = input.readString();
            break;
          }
          case 18: {
            this.status = input.readString();
            break;
          }
          case 24: {
            this.time = input.readInt64();
            break;
          }
        }
      }
    }

    public static VpnCodeResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnCodeResponse(), data);
    }

    public static VpnCodeResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnCodeResponse().mergeFrom(input);
    }
  }

  public static final class VpnChangeRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnChangeRequest[] _emptyArray;
    public static VpnChangeRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnChangeRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string bundleId = 1;
    public String bundleId;

    // optional string username = 2;
    public String username;

    // optional string newpassword = 3;
    public String newpassword;

    // optional string idfa = 4;
    public String idfa;

    // optional string geo = 5;
    public String geo;

    public VpnChangeRequest() {
      clear();
    }

    public VpnChangeRequest clear() {
      bundleId = "";
      username = "";
      newpassword = "";
      idfa = "";
      geo = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.bundleId.equals("")) {
        output.writeString(1, this.bundleId);
      }
      if (!this.username.equals("")) {
        output.writeString(2, this.username);
      }
      if (!this.newpassword.equals("")) {
        output.writeString(3, this.newpassword);
      }
      if (!this.idfa.equals("")) {
        output.writeString(4, this.idfa);
      }
      if (!this.geo.equals("")) {
        output.writeString(5, this.geo);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.bundleId);
      }
      if (!this.username.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.username);
      }
      if (!this.newpassword.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.newpassword);
      }
      if (!this.idfa.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.idfa);
      }
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.geo);
      }
      return size;
    }

    @Override
    public VpnChangeRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.bundleId = input.readString();
            break;
          }
          case 18: {
            this.username = input.readString();
            break;
          }
          case 26: {
            this.newpassword = input.readString();
            break;
          }
          case 34: {
            this.idfa = input.readString();
            break;
          }
          case 42: {
            this.geo = input.readString();
            break;
          }
        }
      }
    }

    public static VpnChangeRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnChangeRequest(), data);
    }

    public static VpnChangeRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnChangeRequest().mergeFrom(input);
    }
  }

  public static final class VpnChangeResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnChangeResponse[] _emptyArray;
    public static VpnChangeResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnChangeResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .VpnUsers VpnUsersList = 1;
    public VpnUsers[] vpnUsersList;

    // optional string status = 2;
    public String status;

    // optional int64 time = 3;
    public long time;

    public VpnChangeResponse() {
      clear();
    }

    public VpnChangeResponse clear() {
      vpnUsersList = VpnUsers.emptyArray();
      status = "";
      time = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.vpnUsersList != null && this.vpnUsersList.length > 0) {
        for (int i = 0; i < this.vpnUsersList.length; i++) {
          VpnUsers element = this.vpnUsersList[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (!this.status.equals("")) {
        output.writeString(2, this.status);
      }
      if (this.time != 0L) {
        output.writeInt64(3, this.time);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.vpnUsersList != null && this.vpnUsersList.length > 0) {
        for (int i = 0; i < this.vpnUsersList.length; i++) {
          VpnUsers element = this.vpnUsersList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (!this.status.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.status);
      }
      if (this.time != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(3, this.time);
      }
      return size;
    }

    @Override
    public VpnChangeResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.vpnUsersList == null ? 0 : this.vpnUsersList.length;
            VpnUsers[] newArray =
                new VpnUsers[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.vpnUsersList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new VpnUsers();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new VpnUsers();
            input.readMessage(newArray[i]);
            this.vpnUsersList = newArray;
            break;
          }
          case 18: {
            this.status = input.readString();
            break;
          }
          case 24: {
            this.time = input.readInt64();
            break;
          }
        }
      }
    }

    public static VpnChangeResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnChangeResponse(), data);
    }

    public static VpnChangeResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnChangeResponse().mergeFrom(input);
    }
  }

  public static final class VpnPayRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnPayRequest[] _emptyArray;
    public static VpnPayRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnPayRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string bundleId = 1;
    public String bundleId;

    // optional int64 id = 2;
    public long id;

    // optional string idfa = 3;
    public String idfa;

    // optional string geo = 4;
    public String geo;

    // optional string regtime = 5;
    public String regtime;

    // optional string begintime = 6;
    public String begintime;

    public VpnPayRequest() {
      clear();
    }

    public VpnPayRequest clear() {
      bundleId = "";
      id = 0L;
      idfa = "";
      geo = "";
      regtime = "";
      begintime = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.bundleId.equals("")) {
        output.writeString(1, this.bundleId);
      }
      if (this.id != 0L) {
        output.writeInt64(2, this.id);
      }
      if (!this.idfa.equals("")) {
        output.writeString(3, this.idfa);
      }
      if (!this.geo.equals("")) {
        output.writeString(4, this.geo);
      }
      if (!this.regtime.equals("")) {
        output.writeString(5, this.regtime);
      }
      if (!this.begintime.equals("")) {
        output.writeString(6, this.begintime);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.bundleId);
      }
      if (this.id != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.id);
      }
      if (!this.idfa.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.idfa);
      }
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.geo);
      }
      if (!this.regtime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.regtime);
      }
      if (!this.begintime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.begintime);
      }
      return size;
    }

    @Override
    public VpnPayRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.bundleId = input.readString();
            break;
          }
          case 16: {
            this.id = input.readInt64();
            break;
          }
          case 26: {
            this.idfa = input.readString();
            break;
          }
          case 34: {
            this.geo = input.readString();
            break;
          }
          case 42: {
            this.regtime = input.readString();
            break;
          }
          case 50: {
            this.begintime = input.readString();
            break;
          }
        }
      }
    }

    public static VpnPayRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnPayRequest(), data);
    }

    public static VpnPayRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnPayRequest().mergeFrom(input);
    }
  }

  public static final class VpnPayResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnPayResponse[] _emptyArray;
    public static VpnPayResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnPayResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .VpnUsers VpnUsersList = 1;
    public VpnUsers[] vpnUsersList;

    // optional string status = 2;
    public String status;

    // optional int64 time = 3;
    public long time;

    public VpnPayResponse() {
      clear();
    }

    public VpnPayResponse clear() {
      vpnUsersList = VpnUsers.emptyArray();
      status = "";
      time = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.vpnUsersList != null && this.vpnUsersList.length > 0) {
        for (int i = 0; i < this.vpnUsersList.length; i++) {
          VpnUsers element = this.vpnUsersList[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (!this.status.equals("")) {
        output.writeString(2, this.status);
      }
      if (this.time != 0L) {
        output.writeInt64(3, this.time);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.vpnUsersList != null && this.vpnUsersList.length > 0) {
        for (int i = 0; i < this.vpnUsersList.length; i++) {
          VpnUsers element = this.vpnUsersList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (!this.status.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.status);
      }
      if (this.time != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(3, this.time);
      }
      return size;
    }

    @Override
    public VpnPayResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.vpnUsersList == null ? 0 : this.vpnUsersList.length;
            VpnUsers[] newArray =
                new VpnUsers[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.vpnUsersList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new VpnUsers();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new VpnUsers();
            input.readMessage(newArray[i]);
            this.vpnUsersList = newArray;
            break;
          }
          case 18: {
            this.status = input.readString();
            break;
          }
          case 24: {
            this.time = input.readInt64();
            break;
          }
        }
      }
    }

    public static VpnPayResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnPayResponse(), data);
    }

    public static VpnPayResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnPayResponse().mergeFrom(input);
    }
  }

  public static final class VpnSign extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnSign[] _emptyArray;
    public static VpnSign[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnSign[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int64 id = 1;
    public long id;

    // optional string bundleId = 2;
    public String bundleId;

    // optional int64 userId = 3;
    public long userId;

    // optional string begintime = 4;
    public String begintime;

    // optional string type = 5;
    public String type;

    // optional string endtime = 6;
    public String endtime;

    public VpnSign() {
      clear();
    }

    public VpnSign clear() {
      id = 0L;
      bundleId = "";
      userId = 0L;
      begintime = "";
      type = "";
      endtime = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0L) {
        output.writeInt64(1, this.id);
      }
      if (!this.bundleId.equals("")) {
        output.writeString(2, this.bundleId);
      }
      if (this.userId != 0L) {
        output.writeInt64(3, this.userId);
      }
      if (!this.begintime.equals("")) {
        output.writeString(4, this.begintime);
      }
      if (!this.type.equals("")) {
        output.writeString(5, this.type);
      }
      if (!this.endtime.equals("")) {
        output.writeString(6, this.endtime);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.id);
      }
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.bundleId);
      }
      if (this.userId != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(3, this.userId);
      }
      if (!this.begintime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.begintime);
      }
      if (!this.type.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.type);
      }
      if (!this.endtime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.endtime);
      }
      return size;
    }

    @Override
    public VpnSign mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt64();
            break;
          }
          case 18: {
            this.bundleId = input.readString();
            break;
          }
          case 24: {
            this.userId = input.readInt64();
            break;
          }
          case 34: {
            this.begintime = input.readString();
            break;
          }
          case 42: {
            this.type = input.readString();
            break;
          }
          case 50: {
            this.endtime = input.readString();
            break;
          }
        }
      }
    }

    public static VpnSign parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnSign(), data);
    }

    public static VpnSign parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnSign().mergeFrom(input);
    }
  }

  public static final class VpnSignRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnSignRequest[] _emptyArray;
    public static VpnSignRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnSignRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string bundleId = 1;
    public String bundleId;

    // optional int64 userId = 2;
    public long userId;

    // optional string idfa = 3;
    public String idfa;

    // optional string geo = 4;
    public String geo;

    // optional string type = 5;
    public String type;

    // optional string begintime = 6;
    public String begintime;

    public VpnSignRequest() {
      clear();
    }

    public VpnSignRequest clear() {
      bundleId = "";
      userId = 0L;
      idfa = "";
      geo = "";
      type = "";
      begintime = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.bundleId.equals("")) {
        output.writeString(1, this.bundleId);
      }
      if (this.userId != 0L) {
        output.writeInt64(2, this.userId);
      }
      if (!this.idfa.equals("")) {
        output.writeString(3, this.idfa);
      }
      if (!this.geo.equals("")) {
        output.writeString(4, this.geo);
      }
      if (!this.type.equals("")) {
        output.writeString(5, this.type);
      }
      if (!this.begintime.equals("")) {
        output.writeString(6, this.begintime);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.bundleId);
      }
      if (this.userId != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.userId);
      }
      if (!this.idfa.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.idfa);
      }
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.geo);
      }
      if (!this.type.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.type);
      }
      if (!this.begintime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.begintime);
      }
      return size;
    }

    @Override
    public VpnSignRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.bundleId = input.readString();
            break;
          }
          case 16: {
            this.userId = input.readInt64();
            break;
          }
          case 26: {
            this.idfa = input.readString();
            break;
          }
          case 34: {
            this.geo = input.readString();
            break;
          }
          case 42: {
            this.type = input.readString();
            break;
          }
          case 50: {
            this.begintime = input.readString();
            break;
          }
        }
      }
    }

    public static VpnSignRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnSignRequest(), data);
    }

    public static VpnSignRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnSignRequest().mergeFrom(input);
    }
  }

  public static final class VpnSignResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnSignResponse[] _emptyArray;
    public static VpnSignResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnSignResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .VpnSign VpnSignList = 1;
    public VpnSign[] vpnSignList;

    // optional string status = 2;
    public String status;

    // optional int64 time = 3;
    public long time;

    public VpnSignResponse() {
      clear();
    }

    public VpnSignResponse clear() {
      vpnSignList = VpnSign.emptyArray();
      status = "";
      time = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.vpnSignList != null && this.vpnSignList.length > 0) {
        for (int i = 0; i < this.vpnSignList.length; i++) {
          VpnSign element = this.vpnSignList[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (!this.status.equals("")) {
        output.writeString(2, this.status);
      }
      if (this.time != 0L) {
        output.writeInt64(3, this.time);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.vpnSignList != null && this.vpnSignList.length > 0) {
        for (int i = 0; i < this.vpnSignList.length; i++) {
          VpnSign element = this.vpnSignList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (!this.status.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.status);
      }
      if (this.time != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(3, this.time);
      }
      return size;
    }

    @Override
    public VpnSignResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.vpnSignList == null ? 0 : this.vpnSignList.length;
            VpnSign[] newArray =
                new VpnSign[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.vpnSignList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new VpnSign();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new VpnSign();
            input.readMessage(newArray[i]);
            this.vpnSignList = newArray;
            break;
          }
          case 18: {
            this.status = input.readString();
            break;
          }
          case 24: {
            this.time = input.readInt64();
            break;
          }
        }
      }
    }

    public static VpnSignResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnSignResponse(), data);
    }

    public static VpnSignResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnSignResponse().mergeFrom(input);
    }
  }

  public static final class VpnEventRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnEventRequest[] _emptyArray;
    public static VpnEventRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnEventRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string bundleId = 1;
    public String bundleId;

    // optional int64 userId = 2;
    public long userId;

    // optional string idfa = 3;
    public String idfa;

    // optional string geo = 4;
    public String geo;

    public VpnEventRequest() {
      clear();
    }

    public VpnEventRequest clear() {
      bundleId = "";
      userId = 0L;
      idfa = "";
      geo = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.bundleId.equals("")) {
        output.writeString(1, this.bundleId);
      }
      if (this.userId != 0L) {
        output.writeInt64(2, this.userId);
      }
      if (!this.idfa.equals("")) {
        output.writeString(3, this.idfa);
      }
      if (!this.geo.equals("")) {
        output.writeString(4, this.geo);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.bundleId);
      }
      if (this.userId != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.userId);
      }
      if (!this.idfa.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.idfa);
      }
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.geo);
      }
      return size;
    }

    @Override
    public VpnEventRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.bundleId = input.readString();
            break;
          }
          case 16: {
            this.userId = input.readInt64();
            break;
          }
          case 26: {
            this.idfa = input.readString();
            break;
          }
          case 34: {
            this.geo = input.readString();
            break;
          }
        }
      }
    }

    public static VpnEventRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnEventRequest(), data);
    }

    public static VpnEventRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnEventRequest().mergeFrom(input);
    }
  }

  public static final class VpnEventResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnEventResponse[] _emptyArray;
    public static VpnEventResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnEventResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .VpnSign VpnSignList = 1;
    public VpnSign[] vpnSignList;

    // repeated .VpnUsers VpnUsersList = 2;
    public VpnUsers[] vpnUsersList;

    // repeated .VpnVerify VpnVerifyList = 3;
    public VpnVerify[] vpnVerifyList;

    // optional string status = 4;
    public String status;

    // optional int64 time = 5;
    public long time;

    public VpnEventResponse() {
      clear();
    }

    public VpnEventResponse clear() {
      vpnSignList = VpnSign.emptyArray();
      vpnUsersList = VpnUsers.emptyArray();
      vpnVerifyList = VpnVerify.emptyArray();
      status = "";
      time = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.vpnSignList != null && this.vpnSignList.length > 0) {
        for (int i = 0; i < this.vpnSignList.length; i++) {
          VpnSign element = this.vpnSignList[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (this.vpnUsersList != null && this.vpnUsersList.length > 0) {
        for (int i = 0; i < this.vpnUsersList.length; i++) {
          VpnUsers element = this.vpnUsersList[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      if (this.vpnVerifyList != null && this.vpnVerifyList.length > 0) {
        for (int i = 0; i < this.vpnVerifyList.length; i++) {
          VpnVerify element = this.vpnVerifyList[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      if (!this.status.equals("")) {
        output.writeString(4, this.status);
      }
      if (this.time != 0L) {
        output.writeInt64(5, this.time);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.vpnSignList != null && this.vpnSignList.length > 0) {
        for (int i = 0; i < this.vpnSignList.length; i++) {
          VpnSign element = this.vpnSignList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (this.vpnUsersList != null && this.vpnUsersList.length > 0) {
        for (int i = 0; i < this.vpnUsersList.length; i++) {
          VpnUsers element = this.vpnUsersList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      if (this.vpnVerifyList != null && this.vpnVerifyList.length > 0) {
        for (int i = 0; i < this.vpnVerifyList.length; i++) {
          VpnVerify element = this.vpnVerifyList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      if (!this.status.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.status);
      }
      if (this.time != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(5, this.time);
      }
      return size;
    }

    @Override
    public VpnEventResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.vpnSignList == null ? 0 : this.vpnSignList.length;
            VpnSign[] newArray =
                new VpnSign[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.vpnSignList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new VpnSign();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new VpnSign();
            input.readMessage(newArray[i]);
            this.vpnSignList = newArray;
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.vpnUsersList == null ? 0 : this.vpnUsersList.length;
            VpnUsers[] newArray =
                new VpnUsers[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.vpnUsersList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new VpnUsers();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new VpnUsers();
            input.readMessage(newArray[i]);
            this.vpnUsersList = newArray;
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.vpnVerifyList == null ? 0 : this.vpnVerifyList.length;
            VpnVerify[] newArray =
                new VpnVerify[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.vpnVerifyList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new VpnVerify();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new VpnVerify();
            input.readMessage(newArray[i]);
            this.vpnVerifyList = newArray;
            break;
          }
          case 34: {
            this.status = input.readString();
            break;
          }
          case 40: {
            this.time = input.readInt64();
            break;
          }
        }
      }
    }

    public static VpnEventResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnEventResponse(), data);
    }

    public static VpnEventResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnEventResponse().mergeFrom(input);
    }
  }

  public static final class VpnAppleId extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnAppleId[] _emptyArray;
    public static VpnAppleId[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnAppleId[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int64 id = 1;
    public long id;

    // optional string bundleId = 2;
    public String bundleId;

    // optional string appleid = 3;
    public String appleid;

    public VpnAppleId() {
      clear();
    }

    public VpnAppleId clear() {
      id = 0L;
      bundleId = "";
      appleid = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0L) {
        output.writeInt64(1, this.id);
      }
      if (!this.bundleId.equals("")) {
        output.writeString(2, this.bundleId);
      }
      if (!this.appleid.equals("")) {
        output.writeString(3, this.appleid);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.id);
      }
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.bundleId);
      }
      if (!this.appleid.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.appleid);
      }
      return size;
    }

    @Override
    public VpnAppleId mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt64();
            break;
          }
          case 18: {
            this.bundleId = input.readString();
            break;
          }
          case 26: {
            this.appleid = input.readString();
            break;
          }
        }
      }
    }

    public static VpnAppleId parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnAppleId(), data);
    }

    public static VpnAppleId parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnAppleId().mergeFrom(input);
    }
  }

  public static final class VpnAppleIdRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnAppleIdRequest[] _emptyArray;
    public static VpnAppleIdRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnAppleIdRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string geo = 1;
    public String geo;

    // optional string idfa = 2;
    public String idfa;

    // optional string bundleId = 3;
    public String bundleId;

    public VpnAppleIdRequest() {
      clear();
    }

    public VpnAppleIdRequest clear() {
      geo = "";
      idfa = "";
      bundleId = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.geo.equals("")) {
        output.writeString(1, this.geo);
      }
      if (!this.idfa.equals("")) {
        output.writeString(2, this.idfa);
      }
      if (!this.bundleId.equals("")) {
        output.writeString(3, this.bundleId);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.geo);
      }
      if (!this.idfa.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.idfa);
      }
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.bundleId);
      }
      return size;
    }

    @Override
    public VpnAppleIdRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.geo = input.readString();
            break;
          }
          case 18: {
            this.idfa = input.readString();
            break;
          }
          case 26: {
            this.bundleId = input.readString();
            break;
          }
        }
      }
    }

    public static VpnAppleIdRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnAppleIdRequest(), data);
    }

    public static VpnAppleIdRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnAppleIdRequest().mergeFrom(input);
    }
  }

  public static final class VpnAppleIdResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnAppleIdResponse[] _emptyArray;
    public static VpnAppleIdResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnAppleIdResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .VpnAppleId VpnAppleIdList = 1;
    public VpnAppleId[] vpnAppleIdList;

    // optional string status = 2;
    public String status;

    // optional int64 time = 3;
    public long time;

    public VpnAppleIdResponse() {
      clear();
    }

    public VpnAppleIdResponse clear() {
      vpnAppleIdList = VpnAppleId.emptyArray();
      status = "";
      time = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.vpnAppleIdList != null && this.vpnAppleIdList.length > 0) {
        for (int i = 0; i < this.vpnAppleIdList.length; i++) {
          VpnAppleId element = this.vpnAppleIdList[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (!this.status.equals("")) {
        output.writeString(2, this.status);
      }
      if (this.time != 0L) {
        output.writeInt64(3, this.time);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.vpnAppleIdList != null && this.vpnAppleIdList.length > 0) {
        for (int i = 0; i < this.vpnAppleIdList.length; i++) {
          VpnAppleId element = this.vpnAppleIdList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (!this.status.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.status);
      }
      if (this.time != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(3, this.time);
      }
      return size;
    }

    @Override
    public VpnAppleIdResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.vpnAppleIdList == null ? 0 : this.vpnAppleIdList.length;
            VpnAppleId[] newArray =
                new VpnAppleId[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.vpnAppleIdList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new VpnAppleId();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new VpnAppleId();
            input.readMessage(newArray[i]);
            this.vpnAppleIdList = newArray;
            break;
          }
          case 18: {
            this.status = input.readString();
            break;
          }
          case 24: {
            this.time = input.readInt64();
            break;
          }
        }
      }
    }

    public static VpnAppleIdResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnAppleIdResponse(), data);
    }

    public static VpnAppleIdResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnAppleIdResponse().mergeFrom(input);
    }
  }

  public static final class VpnVerify extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnVerify[] _emptyArray;
    public static VpnVerify[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnVerify[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string bundleId = 1;
    public String bundleId;

    // optional int64 userId = 2;
    public long userId;

    // optional string quantity = 3;
    public String quantity;

    // optional string product_id = 4;
    public String productId;

    // optional string purchase_date = 5;
    public String purchaseDate;

    // optional string expires_date = 6;
    public String expiresDate;

    // optional string md5_receipt = 7;
    public String md5Receipt;

    public VpnVerify() {
      clear();
    }

    public VpnVerify clear() {
      bundleId = "";
      userId = 0L;
      quantity = "";
      productId = "";
      purchaseDate = "";
      expiresDate = "";
      md5Receipt = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.bundleId.equals("")) {
        output.writeString(1, this.bundleId);
      }
      if (this.userId != 0L) {
        output.writeInt64(2, this.userId);
      }
      if (!this.quantity.equals("")) {
        output.writeString(3, this.quantity);
      }
      if (!this.productId.equals("")) {
        output.writeString(4, this.productId);
      }
      if (!this.purchaseDate.equals("")) {
        output.writeString(5, this.purchaseDate);
      }
      if (!this.expiresDate.equals("")) {
        output.writeString(6, this.expiresDate);
      }
      if (!this.md5Receipt.equals("")) {
        output.writeString(7, this.md5Receipt);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.bundleId);
      }
      if (this.userId != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.userId);
      }
      if (!this.quantity.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.quantity);
      }
      if (!this.productId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.productId);
      }
      if (!this.purchaseDate.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.purchaseDate);
      }
      if (!this.expiresDate.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.expiresDate);
      }
      if (!this.md5Receipt.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.md5Receipt);
      }
      return size;
    }

    @Override
    public VpnVerify mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.bundleId = input.readString();
            break;
          }
          case 16: {
            this.userId = input.readInt64();
            break;
          }
          case 26: {
            this.quantity = input.readString();
            break;
          }
          case 34: {
            this.productId = input.readString();
            break;
          }
          case 42: {
            this.purchaseDate = input.readString();
            break;
          }
          case 50: {
            this.expiresDate = input.readString();
            break;
          }
          case 58: {
            this.md5Receipt = input.readString();
            break;
          }
        }
      }
    }

    public static VpnVerify parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnVerify(), data);
    }

    public static VpnVerify parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnVerify().mergeFrom(input);
    }
  }

  public static final class VpnIapVerifyRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnIapVerifyRequest[] _emptyArray;
    public static VpnIapVerifyRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnIapVerifyRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string bundleId = 1;
    public String bundleId;

    // optional int64 userId = 2;
    public long userId;

    // optional string geo = 3;
    public String geo;

    // optional string voucher = 4;
    public String voucher;

    // optional string regtime = 5;
    public String regtime;

    public VpnIapVerifyRequest() {
      clear();
    }

    public VpnIapVerifyRequest clear() {
      bundleId = "";
      userId = 0L;
      geo = "";
      voucher = "";
      regtime = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.bundleId.equals("")) {
        output.writeString(1, this.bundleId);
      }
      if (this.userId != 0L) {
        output.writeInt64(2, this.userId);
      }
      if (!this.geo.equals("")) {
        output.writeString(3, this.geo);
      }
      if (!this.voucher.equals("")) {
        output.writeString(4, this.voucher);
      }
      if (!this.regtime.equals("")) {
        output.writeString(5, this.regtime);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.bundleId);
      }
      if (this.userId != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.userId);
      }
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.geo);
      }
      if (!this.voucher.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.voucher);
      }
      if (!this.regtime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.regtime);
      }
      return size;
    }

    @Override
    public VpnIapVerifyRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.bundleId = input.readString();
            break;
          }
          case 16: {
            this.userId = input.readInt64();
            break;
          }
          case 26: {
            this.geo = input.readString();
            break;
          }
          case 34: {
            this.voucher = input.readString();
            break;
          }
          case 42: {
            this.regtime = input.readString();
            break;
          }
        }
      }
    }

    public static VpnIapVerifyRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnIapVerifyRequest(), data);
    }

    public static VpnIapVerifyRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnIapVerifyRequest().mergeFrom(input);
    }
  }

  public static final class VpnIapVerifyResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnIapVerifyResponse[] _emptyArray;
    public static VpnIapVerifyResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnIapVerifyResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .VpnVerify VpnVerifyList = 1;
    public VpnVerify[] vpnVerifyList;

    // optional string status = 2;
    public String status;

    // optional int64 time = 3;
    public long time;

    public VpnIapVerifyResponse() {
      clear();
    }

    public VpnIapVerifyResponse clear() {
      vpnVerifyList = VpnVerify.emptyArray();
      status = "";
      time = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.vpnVerifyList != null && this.vpnVerifyList.length > 0) {
        for (int i = 0; i < this.vpnVerifyList.length; i++) {
          VpnVerify element = this.vpnVerifyList[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (!this.status.equals("")) {
        output.writeString(2, this.status);
      }
      if (this.time != 0L) {
        output.writeInt64(3, this.time);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.vpnVerifyList != null && this.vpnVerifyList.length > 0) {
        for (int i = 0; i < this.vpnVerifyList.length; i++) {
          VpnVerify element = this.vpnVerifyList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (!this.status.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.status);
      }
      if (this.time != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(3, this.time);
      }
      return size;
    }

    @Override
    public VpnIapVerifyResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.vpnVerifyList == null ? 0 : this.vpnVerifyList.length;
            VpnVerify[] newArray =
                new VpnVerify[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.vpnVerifyList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new VpnVerify();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new VpnVerify();
            input.readMessage(newArray[i]);
            this.vpnVerifyList = newArray;
            break;
          }
          case 18: {
            this.status = input.readString();
            break;
          }
          case 24: {
            this.time = input.readInt64();
            break;
          }
        }
      }
    }

    public static VpnIapVerifyResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnIapVerifyResponse(), data);
    }

    public static VpnIapVerifyResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnIapVerifyResponse().mergeFrom(input);
    }
  }

  public static final class AdStrategy extends
      com.google.protobuf.nano.MessageNano {

    private static volatile AdStrategy[] _emptyArray;
    public static AdStrategy[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AdStrategy[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 adType = 1;
    public int adType;

    // optional int32 adSource = 2;
    public int adSource;

    // optional int32 priority = 3;
    public int priority;

    // optional string adID = 4;
    public String adID;

    // optional int32 positionID = 5;
    public int positionID;

    // optional int32 adreward = 6;
    public int adreward;

    public AdStrategy() {
      clear();
    }

    public AdStrategy clear() {
      adType = 0;
      adSource = 0;
      priority = 0;
      adID = "";
      positionID = 0;
      adreward = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.adType != 0) {
        output.writeInt32(1, this.adType);
      }
      if (this.adSource != 0) {
        output.writeInt32(2, this.adSource);
      }
      if (this.priority != 0) {
        output.writeInt32(3, this.priority);
      }
      if (!this.adID.equals("")) {
        output.writeString(4, this.adID);
      }
      if (this.positionID != 0) {
        output.writeInt32(5, this.positionID);
      }
      if (this.adreward != 0) {
        output.writeInt32(6, this.adreward);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.adType != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.adType);
      }
      if (this.adSource != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.adSource);
      }
      if (this.priority != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.priority);
      }
      if (!this.adID.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.adID);
      }
      if (this.positionID != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.positionID);
      }
      if (this.adreward != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(6, this.adreward);
      }
      return size;
    }

    @Override
    public AdStrategy mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.adType = input.readInt32();
            break;
          }
          case 16: {
            this.adSource = input.readInt32();
            break;
          }
          case 24: {
            this.priority = input.readInt32();
            break;
          }
          case 34: {
            this.adID = input.readString();
            break;
          }
          case 40: {
            this.positionID = input.readInt32();
            break;
          }
          case 48: {
            this.adreward = input.readInt32();
            break;
          }
        }
      }
    }

    public static AdStrategy parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new AdStrategy(), data);
    }

    public static AdStrategy parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AdStrategy().mergeFrom(input);
    }
  }

  public static final class AdControl extends
      com.google.protobuf.nano.MessageNano {

    private static volatile AdControl[] _emptyArray;
    public static AdControl[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AdControl[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 init = 1;
    public int init;

    // optional int32 show = 2;
    public int show;

    // optional int32 positionID = 3;
    public int positionID;

    // optional int32 requestIntervalTime = 4;
    public int requestIntervalTime;

    // optional int32 status = 5;
    public int status;

    public AdControl() {
      clear();
    }

    public AdControl clear() {
      init = 0;
      show = 0;
      positionID = 0;
      requestIntervalTime = 0;
      status = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.init != 0) {
        output.writeInt32(1, this.init);
      }
      if (this.show != 0) {
        output.writeInt32(2, this.show);
      }
      if (this.positionID != 0) {
        output.writeInt32(3, this.positionID);
      }
      if (this.requestIntervalTime != 0) {
        output.writeInt32(4, this.requestIntervalTime);
      }
      if (this.status != 0) {
        output.writeInt32(5, this.status);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.init != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.init);
      }
      if (this.show != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.show);
      }
      if (this.positionID != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.positionID);
      }
      if (this.requestIntervalTime != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.requestIntervalTime);
      }
      if (this.status != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.status);
      }
      return size;
    }

    @Override
    public AdControl mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.init = input.readInt32();
            break;
          }
          case 16: {
            this.show = input.readInt32();
            break;
          }
          case 24: {
            this.positionID = input.readInt32();
            break;
          }
          case 32: {
            this.requestIntervalTime = input.readInt32();
            break;
          }
          case 40: {
            this.status = input.readInt32();
            break;
          }
        }
      }
    }

    public static AdControl parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new AdControl(), data);
    }

    public static AdControl parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AdControl().mergeFrom(input);
    }
  }

  public static final class AdClick extends
      com.google.protobuf.nano.MessageNano {

    private static volatile AdClick[] _emptyArray;
    public static AdClick[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AdClick[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 positionID = 1;
    public int positionID;

    // optional string minClick = 2;
    public String minClick;

    // optional string maxClick = 3;
    public String maxClick;

    public AdClick() {
      clear();
    }

    public AdClick clear() {
      positionID = 0;
      minClick = "";
      maxClick = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.positionID != 0) {
        output.writeInt32(1, this.positionID);
      }
      if (!this.minClick.equals("")) {
        output.writeString(2, this.minClick);
      }
      if (!this.maxClick.equals("")) {
        output.writeString(3, this.maxClick);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.positionID != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.positionID);
      }
      if (!this.minClick.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.minClick);
      }
      if (!this.maxClick.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.maxClick);
      }
      return size;
    }

    @Override
    public AdClick mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.positionID = input.readInt32();
            break;
          }
          case 18: {
            this.minClick = input.readString();
            break;
          }
          case 26: {
            this.maxClick = input.readString();
            break;
          }
        }
      }
    }

    public static AdClick parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new AdClick(), data);
    }

    public static AdClick parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AdClick().mergeFrom(input);
    }
  }

  public static final class AdResources extends
      com.google.protobuf.nano.MessageNano {

    private static volatile AdResources[] _emptyArray;
    public static AdResources[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AdResources[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string soundKey = 1;
    public String soundKey;

    // optional string jamKey = 2;
    public String jamKey;

    // optional string type = 3;
    public String type;

    public AdResources() {
      clear();
    }

    public AdResources clear() {
      soundKey = "";
      jamKey = "";
      type = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.soundKey.equals("")) {
        output.writeString(1, this.soundKey);
      }
      if (!this.jamKey.equals("")) {
        output.writeString(2, this.jamKey);
      }
      if (!this.type.equals("")) {
        output.writeString(3, this.type);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.soundKey.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.soundKey);
      }
      if (!this.jamKey.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.jamKey);
      }
      if (!this.type.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.type);
      }
      return size;
    }

    @Override
    public AdResources mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.soundKey = input.readString();
            break;
          }
          case 18: {
            this.jamKey = input.readString();
            break;
          }
          case 26: {
            this.type = input.readString();
            break;
          }
        }
      }
    }

    public static AdResources parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new AdResources(), data);
    }

    public static AdResources parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AdResources().mergeFrom(input);
    }
  }

  public static final class VpnStrategyRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnStrategyRequest[] _emptyArray;
    public static VpnStrategyRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnStrategyRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int64 timeStamp = 1;
    public long timeStamp;

    // optional string geo = 2;
    public String geo;

    // optional string idfa = 3;
    public String idfa;

    // optional string bundleId = 4;
    public String bundleId;

    // optional string bundleDisplayName = 5;
    public String bundleDisplayName;

    // optional string build = 6;
    public String build;

    // optional string version = 7;
    public String version;

    public VpnStrategyRequest() {
      clear();
    }

    public VpnStrategyRequest clear() {
      timeStamp = 0L;
      geo = "";
      idfa = "";
      bundleId = "";
      bundleDisplayName = "";
      build = "";
      version = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.timeStamp != 0L) {
        output.writeInt64(1, this.timeStamp);
      }
      if (!this.geo.equals("")) {
        output.writeString(2, this.geo);
      }
      if (!this.idfa.equals("")) {
        output.writeString(3, this.idfa);
      }
      if (!this.bundleId.equals("")) {
        output.writeString(4, this.bundleId);
      }
      if (!this.bundleDisplayName.equals("")) {
        output.writeString(5, this.bundleDisplayName);
      }
      if (!this.build.equals("")) {
        output.writeString(6, this.build);
      }
      if (!this.version.equals("")) {
        output.writeString(7, this.version);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.timeStamp != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.timeStamp);
      }
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.geo);
      }
      if (!this.idfa.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.idfa);
      }
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.bundleId);
      }
      if (!this.bundleDisplayName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.bundleDisplayName);
      }
      if (!this.build.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.build);
      }
      if (!this.version.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.version);
      }
      return size;
    }

    @Override
    public VpnStrategyRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.timeStamp = input.readInt64();
            break;
          }
          case 18: {
            this.geo = input.readString();
            break;
          }
          case 26: {
            this.idfa = input.readString();
            break;
          }
          case 34: {
            this.bundleId = input.readString();
            break;
          }
          case 42: {
            this.bundleDisplayName = input.readString();
            break;
          }
          case 50: {
            this.build = input.readString();
            break;
          }
          case 58: {
            this.version = input.readString();
            break;
          }
        }
      }
    }

    public static VpnStrategyRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnStrategyRequest(), data);
    }

    public static VpnStrategyRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnStrategyRequest().mergeFrom(input);
    }
  }

  public static final class VpnStrategyResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnStrategyResponse[] _emptyArray;
    public static VpnStrategyResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnStrategyResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .AdStrategy adStrategyList = 1;
    public AdStrategy[] adStrategyList;

    // repeated .AdControl adControlList = 2;
    public AdControl[] adControlList;

    // repeated .AdClick adClickList = 3;
    public AdClick[] adClickList;

    // repeated .AdResources adResourcesList = 4;
    public AdResources[] adResourcesList;

    // optional int64 serverTime = 5;
    public long serverTime;

    public VpnStrategyResponse() {
      clear();
    }

    public VpnStrategyResponse clear() {
      adStrategyList = AdStrategy.emptyArray();
      adControlList = AdControl.emptyArray();
      adClickList = AdClick.emptyArray();
      adResourcesList = AdResources.emptyArray();
      serverTime = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.adStrategyList != null && this.adStrategyList.length > 0) {
        for (int i = 0; i < this.adStrategyList.length; i++) {
          AdStrategy element = this.adStrategyList[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (this.adControlList != null && this.adControlList.length > 0) {
        for (int i = 0; i < this.adControlList.length; i++) {
          AdControl element = this.adControlList[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      if (this.adClickList != null && this.adClickList.length > 0) {
        for (int i = 0; i < this.adClickList.length; i++) {
          AdClick element = this.adClickList[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      if (this.adResourcesList != null && this.adResourcesList.length > 0) {
        for (int i = 0; i < this.adResourcesList.length; i++) {
          AdResources element = this.adResourcesList[i];
          if (element != null) {
            output.writeMessage(4, element);
          }
        }
      }
      if (this.serverTime != 0L) {
        output.writeInt64(5, this.serverTime);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.adStrategyList != null && this.adStrategyList.length > 0) {
        for (int i = 0; i < this.adStrategyList.length; i++) {
          AdStrategy element = this.adStrategyList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (this.adControlList != null && this.adControlList.length > 0) {
        for (int i = 0; i < this.adControlList.length; i++) {
          AdControl element = this.adControlList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      if (this.adClickList != null && this.adClickList.length > 0) {
        for (int i = 0; i < this.adClickList.length; i++) {
          AdClick element = this.adClickList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      if (this.adResourcesList != null && this.adResourcesList.length > 0) {
        for (int i = 0; i < this.adResourcesList.length; i++) {
          AdResources element = this.adResourcesList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(4, element);
          }
        }
      }
      if (this.serverTime != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(5, this.serverTime);
      }
      return size;
    }

    @Override
    public VpnStrategyResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.adStrategyList == null ? 0 : this.adStrategyList.length;
            AdStrategy[] newArray =
                new AdStrategy[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.adStrategyList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new AdStrategy();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new AdStrategy();
            input.readMessage(newArray[i]);
            this.adStrategyList = newArray;
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.adControlList == null ? 0 : this.adControlList.length;
            AdControl[] newArray =
                new AdControl[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.adControlList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new AdControl();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new AdControl();
            input.readMessage(newArray[i]);
            this.adControlList = newArray;
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.adClickList == null ? 0 : this.adClickList.length;
            AdClick[] newArray =
                new AdClick[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.adClickList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new AdClick();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new AdClick();
            input.readMessage(newArray[i]);
            this.adClickList = newArray;
            break;
          }
          case 34: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 34);
            int i = this.adResourcesList == null ? 0 : this.adResourcesList.length;
            AdResources[] newArray =
                new AdResources[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.adResourcesList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new AdResources();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new AdResources();
            input.readMessage(newArray[i]);
            this.adResourcesList = newArray;
            break;
          }
          case 40: {
            this.serverTime = input.readInt64();
            break;
          }
        }
      }
    }

    public static VpnStrategyResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnStrategyResponse(), data);
    }

    public static VpnStrategyResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnStrategyResponse().mergeFrom(input);
    }
  }

  public static final class VpnDataRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnDataRequest[] _emptyArray;
    public static VpnDataRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnDataRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string geo = 1;
    public String geo;

    // optional string bundleId = 2;
    public String bundleId;

    // optional string bundleDisplayName = 3;
    public String bundleDisplayName;

    // optional string build = 4;
    public String build;

    // optional string version = 5;
    public String version;

    // optional string networkType = 6;
    public String networkType;

    // optional string idfa = 7;
    public String idfa;

    // optional int32 eventNumber = 8;
    public int eventNumber;

    // repeated .eventApplicationStartup applicationStartupList = 9;
    public eventApplicationStartup[] applicationStartupList;

    // repeated .eventPageSwitching pageSwitchingList = 10;
    public eventPageSwitching[] pageSwitchingList;

    // repeated .eventAdRequest adRequestList = 11;
    public eventAdRequest[] adRequestList;

    // repeated .eventAdShow adShowList = 12;
    public eventAdShow[] adShowList;

    // repeated .eventAdClick adClickList = 13;
    public eventAdClick[] adClickList;

    // optional int64 timeStamp = 14;
    public long timeStamp;

    public VpnDataRequest() {
      clear();
    }

    public VpnDataRequest clear() {
      geo = "";
      bundleId = "";
      bundleDisplayName = "";
      build = "";
      version = "";
      networkType = "";
      idfa = "";
      eventNumber = 0;
      applicationStartupList = eventApplicationStartup.emptyArray();
      pageSwitchingList = eventPageSwitching.emptyArray();
      adRequestList = eventAdRequest.emptyArray();
      adShowList = eventAdShow.emptyArray();
      adClickList = eventAdClick.emptyArray();
      timeStamp = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.geo.equals("")) {
        output.writeString(1, this.geo);
      }
      if (!this.bundleId.equals("")) {
        output.writeString(2, this.bundleId);
      }
      if (!this.bundleDisplayName.equals("")) {
        output.writeString(3, this.bundleDisplayName);
      }
      if (!this.build.equals("")) {
        output.writeString(4, this.build);
      }
      if (!this.version.equals("")) {
        output.writeString(5, this.version);
      }
      if (!this.networkType.equals("")) {
        output.writeString(6, this.networkType);
      }
      if (!this.idfa.equals("")) {
        output.writeString(7, this.idfa);
      }
      if (this.eventNumber != 0) {
        output.writeInt32(8, this.eventNumber);
      }
      if (this.applicationStartupList != null && this.applicationStartupList.length > 0) {
        for (int i = 0; i < this.applicationStartupList.length; i++) {
          eventApplicationStartup element = this.applicationStartupList[i];
          if (element != null) {
            output.writeMessage(9, element);
          }
        }
      }
      if (this.pageSwitchingList != null && this.pageSwitchingList.length > 0) {
        for (int i = 0; i < this.pageSwitchingList.length; i++) {
          eventPageSwitching element = this.pageSwitchingList[i];
          if (element != null) {
            output.writeMessage(10, element);
          }
        }
      }
      if (this.adRequestList != null && this.adRequestList.length > 0) {
        for (int i = 0; i < this.adRequestList.length; i++) {
          eventAdRequest element = this.adRequestList[i];
          if (element != null) {
            output.writeMessage(11, element);
          }
        }
      }
      if (this.adShowList != null && this.adShowList.length > 0) {
        for (int i = 0; i < this.adShowList.length; i++) {
          eventAdShow element = this.adShowList[i];
          if (element != null) {
            output.writeMessage(12, element);
          }
        }
      }
      if (this.adClickList != null && this.adClickList.length > 0) {
        for (int i = 0; i < this.adClickList.length; i++) {
          eventAdClick element = this.adClickList[i];
          if (element != null) {
            output.writeMessage(13, element);
          }
        }
      }
      if (this.timeStamp != 0L) {
        output.writeInt64(14, this.timeStamp);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.geo);
      }
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.bundleId);
      }
      if (!this.bundleDisplayName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.bundleDisplayName);
      }
      if (!this.build.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.build);
      }
      if (!this.version.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.version);
      }
      if (!this.networkType.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.networkType);
      }
      if (!this.idfa.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.idfa);
      }
      if (this.eventNumber != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(8, this.eventNumber);
      }
      if (this.applicationStartupList != null && this.applicationStartupList.length > 0) {
        for (int i = 0; i < this.applicationStartupList.length; i++) {
          eventApplicationStartup element = this.applicationStartupList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(9, element);
          }
        }
      }
      if (this.pageSwitchingList != null && this.pageSwitchingList.length > 0) {
        for (int i = 0; i < this.pageSwitchingList.length; i++) {
          eventPageSwitching element = this.pageSwitchingList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(10, element);
          }
        }
      }
      if (this.adRequestList != null && this.adRequestList.length > 0) {
        for (int i = 0; i < this.adRequestList.length; i++) {
          eventAdRequest element = this.adRequestList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(11, element);
          }
        }
      }
      if (this.adShowList != null && this.adShowList.length > 0) {
        for (int i = 0; i < this.adShowList.length; i++) {
          eventAdShow element = this.adShowList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(12, element);
          }
        }
      }
      if (this.adClickList != null && this.adClickList.length > 0) {
        for (int i = 0; i < this.adClickList.length; i++) {
          eventAdClick element = this.adClickList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(13, element);
          }
        }
      }
      if (this.timeStamp != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(14, this.timeStamp);
      }
      return size;
    }

    @Override
    public VpnDataRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.geo = input.readString();
            break;
          }
          case 18: {
            this.bundleId = input.readString();
            break;
          }
          case 26: {
            this.bundleDisplayName = input.readString();
            break;
          }
          case 34: {
            this.build = input.readString();
            break;
          }
          case 42: {
            this.version = input.readString();
            break;
          }
          case 50: {
            this.networkType = input.readString();
            break;
          }
          case 58: {
            this.idfa = input.readString();
            break;
          }
          case 64: {
            this.eventNumber = input.readInt32();
            break;
          }
          case 74: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 74);
            int i = this.applicationStartupList == null ? 0 : this.applicationStartupList.length;
            eventApplicationStartup[] newArray =
                new eventApplicationStartup[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.applicationStartupList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new eventApplicationStartup();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new eventApplicationStartup();
            input.readMessage(newArray[i]);
            this.applicationStartupList = newArray;
            break;
          }
          case 82: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 82);
            int i = this.pageSwitchingList == null ? 0 : this.pageSwitchingList.length;
            eventPageSwitching[] newArray =
                new eventPageSwitching[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.pageSwitchingList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new eventPageSwitching();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new eventPageSwitching();
            input.readMessage(newArray[i]);
            this.pageSwitchingList = newArray;
            break;
          }
          case 90: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 90);
            int i = this.adRequestList == null ? 0 : this.adRequestList.length;
            eventAdRequest[] newArray =
                new eventAdRequest[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.adRequestList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new eventAdRequest();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new eventAdRequest();
            input.readMessage(newArray[i]);
            this.adRequestList = newArray;
            break;
          }
          case 98: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 98);
            int i = this.adShowList == null ? 0 : this.adShowList.length;
            eventAdShow[] newArray =
                new eventAdShow[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.adShowList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new eventAdShow();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new eventAdShow();
            input.readMessage(newArray[i]);
            this.adShowList = newArray;
            break;
          }
          case 106: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 106);
            int i = this.adClickList == null ? 0 : this.adClickList.length;
            eventAdClick[] newArray =
                new eventAdClick[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.adClickList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new eventAdClick();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new eventAdClick();
            input.readMessage(newArray[i]);
            this.adClickList = newArray;
            break;
          }
          case 112: {
            this.timeStamp = input.readInt64();
            break;
          }
        }
      }
    }

    public static VpnDataRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnDataRequest(), data);
    }

    public static VpnDataRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnDataRequest().mergeFrom(input);
    }
  }

  public static final class VpnDataResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnDataResponse[] _emptyArray;
    public static VpnDataResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnDataResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string success = 1;
    public String success;

    // optional bool status = 2;
    public boolean status;

    public VpnDataResponse() {
      clear();
    }

    public VpnDataResponse clear() {
      success = "";
      status = false;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.success.equals("")) {
        output.writeString(1, this.success);
      }
      if (this.status != false) {
        output.writeBool(2, this.status);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.success.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.success);
      }
      if (this.status != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.status);
      }
      return size;
    }

    @Override
    public VpnDataResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.success = input.readString();
            break;
          }
          case 16: {
            this.status = input.readBool();
            break;
          }
        }
      }
    }

    public static VpnDataResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnDataResponse(), data);
    }

    public static VpnDataResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnDataResponse().mergeFrom(input);
    }
  }

  public static final class eventApplicationStartup extends
      com.google.protobuf.nano.MessageNano {

    private static volatile eventApplicationStartup[] _emptyArray;
    public static eventApplicationStartup[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new eventApplicationStartup[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string geo = 1;
    public String geo;

    // optional int64 timeStartup = 2;
    public long timeStartup;

    public eventApplicationStartup() {
      clear();
    }

    public eventApplicationStartup clear() {
      geo = "";
      timeStartup = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.geo.equals("")) {
        output.writeString(1, this.geo);
      }
      if (this.timeStartup != 0L) {
        output.writeInt64(2, this.timeStartup);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.geo);
      }
      if (this.timeStartup != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.timeStartup);
      }
      return size;
    }

    @Override
    public eventApplicationStartup mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.geo = input.readString();
            break;
          }
          case 16: {
            this.timeStartup = input.readInt64();
            break;
          }
        }
      }
    }

    public static eventApplicationStartup parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new eventApplicationStartup(), data);
    }

    public static eventApplicationStartup parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new eventApplicationStartup().mergeFrom(input);
    }
  }

  public static final class eventPageSwitching extends
      com.google.protobuf.nano.MessageNano {

    private static volatile eventPageSwitching[] _emptyArray;
    public static eventPageSwitching[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new eventPageSwitching[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string pageName = 1;
    public String pageName;

    // optional string geo = 2;
    public String geo;

    // optional int64 timeSwitching = 3;
    public long timeSwitching;

    public eventPageSwitching() {
      clear();
    }

    public eventPageSwitching clear() {
      pageName = "";
      geo = "";
      timeSwitching = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.pageName.equals("")) {
        output.writeString(1, this.pageName);
      }
      if (!this.geo.equals("")) {
        output.writeString(2, this.geo);
      }
      if (this.timeSwitching != 0L) {
        output.writeInt64(3, this.timeSwitching);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.pageName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.pageName);
      }
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.geo);
      }
      if (this.timeSwitching != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(3, this.timeSwitching);
      }
      return size;
    }

    @Override
    public eventPageSwitching mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.pageName = input.readString();
            break;
          }
          case 18: {
            this.geo = input.readString();
            break;
          }
          case 24: {
            this.timeSwitching = input.readInt64();
            break;
          }
        }
      }
    }

    public static eventPageSwitching parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new eventPageSwitching(), data);
    }

    public static eventPageSwitching parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new eventPageSwitching().mergeFrom(input);
    }
  }

  public static final class eventAdRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile eventAdRequest[] _emptyArray;
    public static eventAdRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new eventAdRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string geo = 1;
    public String geo;

    // optional int64 timeRequest = 2;
    public long timeRequest;

    // optional int32 adPositionNumber = 3;
    public int adPositionNumber;

    // optional int32 adType = 4;
    public int adType;

    public eventAdRequest() {
      clear();
    }

    public eventAdRequest clear() {
      geo = "";
      timeRequest = 0L;
      adPositionNumber = 0;
      adType = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.geo.equals("")) {
        output.writeString(1, this.geo);
      }
      if (this.timeRequest != 0L) {
        output.writeInt64(2, this.timeRequest);
      }
      if (this.adPositionNumber != 0) {
        output.writeInt32(3, this.adPositionNumber);
      }
      if (this.adType != 0) {
        output.writeInt32(4, this.adType);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.geo);
      }
      if (this.timeRequest != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.timeRequest);
      }
      if (this.adPositionNumber != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.adPositionNumber);
      }
      if (this.adType != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.adType);
      }
      return size;
    }

    @Override
    public eventAdRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.geo = input.readString();
            break;
          }
          case 16: {
            this.timeRequest = input.readInt64();
            break;
          }
          case 24: {
            this.adPositionNumber = input.readInt32();
            break;
          }
          case 32: {
            this.adType = input.readInt32();
            break;
          }
        }
      }
    }

    public static eventAdRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new eventAdRequest(), data);
    }

    public static eventAdRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new eventAdRequest().mergeFrom(input);
    }
  }

  public static final class eventAdShow extends
      com.google.protobuf.nano.MessageNano {

    private static volatile eventAdShow[] _emptyArray;
    public static eventAdShow[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new eventAdShow[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string geo = 1;
    public String geo;

    // optional int64 timeShow = 2;
    public long timeShow;

    // optional int32 adPositionNumber = 3;
    public int adPositionNumber;

    // optional int32 adType = 4;
    public int adType;

    public eventAdShow() {
      clear();
    }

    public eventAdShow clear() {
      geo = "";
      timeShow = 0L;
      adPositionNumber = 0;
      adType = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.geo.equals("")) {
        output.writeString(1, this.geo);
      }
      if (this.timeShow != 0L) {
        output.writeInt64(2, this.timeShow);
      }
      if (this.adPositionNumber != 0) {
        output.writeInt32(3, this.adPositionNumber);
      }
      if (this.adType != 0) {
        output.writeInt32(4, this.adType);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.geo);
      }
      if (this.timeShow != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.timeShow);
      }
      if (this.adPositionNumber != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.adPositionNumber);
      }
      if (this.adType != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.adType);
      }
      return size;
    }

    @Override
    public eventAdShow mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.geo = input.readString();
            break;
          }
          case 16: {
            this.timeShow = input.readInt64();
            break;
          }
          case 24: {
            this.adPositionNumber = input.readInt32();
            break;
          }
          case 32: {
            this.adType = input.readInt32();
            break;
          }
        }
      }
    }

    public static eventAdShow parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new eventAdShow(), data);
    }

    public static eventAdShow parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new eventAdShow().mergeFrom(input);
    }
  }

  public static final class eventAdClick extends
      com.google.protobuf.nano.MessageNano {

    private static volatile eventAdClick[] _emptyArray;
    public static eventAdClick[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new eventAdClick[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string geo = 1;
    public String geo;

    // optional int64 timeClick = 2;
    public long timeClick;

    // optional int32 adPositionNumber = 3;
    public int adPositionNumber;

    // optional int32 adType = 4;
    public int adType;

    public eventAdClick() {
      clear();
    }

    public eventAdClick clear() {
      geo = "";
      timeClick = 0L;
      adPositionNumber = 0;
      adType = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.geo.equals("")) {
        output.writeString(1, this.geo);
      }
      if (this.timeClick != 0L) {
        output.writeInt64(2, this.timeClick);
      }
      if (this.adPositionNumber != 0) {
        output.writeInt32(3, this.adPositionNumber);
      }
      if (this.adType != 0) {
        output.writeInt32(4, this.adType);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.geo);
      }
      if (this.timeClick != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.timeClick);
      }
      if (this.adPositionNumber != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.adPositionNumber);
      }
      if (this.adType != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.adType);
      }
      return size;
    }

    @Override
    public eventAdClick mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.geo = input.readString();
            break;
          }
          case 16: {
            this.timeClick = input.readInt64();
            break;
          }
          case 24: {
            this.adPositionNumber = input.readInt32();
            break;
          }
          case 32: {
            this.adType = input.readInt32();
            break;
          }
        }
      }
    }

    public static eventAdClick parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new eventAdClick(), data);
    }

    public static eventAdClick parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new eventAdClick().mergeFrom(input);
    }
  }

  public static final class VpnPushRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnPushRequest[] _emptyArray;
    public static VpnPushRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnPushRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int64 timeStamp = 1;
    public long timeStamp;

    // optional string geo = 2;
    public String geo;

    // optional string idfa = 3;
    public String idfa;

    // optional string bundleId = 4;
    public String bundleId;

    // optional string bundleDisplayName = 5;
    public String bundleDisplayName;

    // optional string build = 6;
    public String build;

    // optional string version = 7;
    public String version;

    // optional string deviceToken = 8;
    public String deviceToken;

    // optional int32 isUninstall = 9;
    public int isUninstall;

    public VpnPushRequest() {
      clear();
    }

    public VpnPushRequest clear() {
      timeStamp = 0L;
      geo = "";
      idfa = "";
      bundleId = "";
      bundleDisplayName = "";
      build = "";
      version = "";
      deviceToken = "";
      isUninstall = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.timeStamp != 0L) {
        output.writeInt64(1, this.timeStamp);
      }
      if (!this.geo.equals("")) {
        output.writeString(2, this.geo);
      }
      if (!this.idfa.equals("")) {
        output.writeString(3, this.idfa);
      }
      if (!this.bundleId.equals("")) {
        output.writeString(4, this.bundleId);
      }
      if (!this.bundleDisplayName.equals("")) {
        output.writeString(5, this.bundleDisplayName);
      }
      if (!this.build.equals("")) {
        output.writeString(6, this.build);
      }
      if (!this.version.equals("")) {
        output.writeString(7, this.version);
      }
      if (!this.deviceToken.equals("")) {
        output.writeString(8, this.deviceToken);
      }
      if (this.isUninstall != 0) {
        output.writeInt32(9, this.isUninstall);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.timeStamp != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.timeStamp);
      }
      if (!this.geo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.geo);
      }
      if (!this.idfa.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.idfa);
      }
      if (!this.bundleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.bundleId);
      }
      if (!this.bundleDisplayName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.bundleDisplayName);
      }
      if (!this.build.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.build);
      }
      if (!this.version.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.version);
      }
      if (!this.deviceToken.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(8, this.deviceToken);
      }
      if (this.isUninstall != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(9, this.isUninstall);
      }
      return size;
    }

    @Override
    public VpnPushRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.timeStamp = input.readInt64();
            break;
          }
          case 18: {
            this.geo = input.readString();
            break;
          }
          case 26: {
            this.idfa = input.readString();
            break;
          }
          case 34: {
            this.bundleId = input.readString();
            break;
          }
          case 42: {
            this.bundleDisplayName = input.readString();
            break;
          }
          case 50: {
            this.build = input.readString();
            break;
          }
          case 58: {
            this.version = input.readString();
            break;
          }
          case 66: {
            this.deviceToken = input.readString();
            break;
          }
          case 72: {
            this.isUninstall = input.readInt32();
            break;
          }
        }
      }
    }

    public static VpnPushRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnPushRequest(), data);
    }

    public static VpnPushRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnPushRequest().mergeFrom(input);
    }
  }

  public static final class VpnPushResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VpnPushResponse[] _emptyArray;
    public static VpnPushResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VpnPushResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int64 sendTime = 1;
    public long sendTime;

    // optional string success = 2;
    public String success;

    public VpnPushResponse() {
      clear();
    }

    public VpnPushResponse clear() {
      sendTime = 0L;
      success = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.sendTime != 0L) {
        output.writeInt64(1, this.sendTime);
      }
      if (!this.success.equals("")) {
        output.writeString(2, this.success);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.sendTime != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.sendTime);
      }
      if (!this.success.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.success);
      }
      return size;
    }

    @Override
    public VpnPushResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.sendTime = input.readInt64();
            break;
          }
          case 18: {
            this.success = input.readString();
            break;
          }
        }
      }
    }

    public static VpnPushResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VpnPushResponse(), data);
    }

    public static VpnPushResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VpnPushResponse().mergeFrom(input);
    }
  }
}
